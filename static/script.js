// static/script.js

// 各診断型ごとの説明文データ
const descriptions = {
    "貯蓄優先型": `あなたはまず、投資を始める前に「お金をためる力」を育てることが大切です。
    毎月の収支を見直し、不要なサブスクや衝動買いを控えることで、手元に自由に使える資金を確保できます。
    この段階ではまだ市場にお金を投入する必要はなく、生活費を安定させながら貯蓄を積み上げること自体が投資の土台になります。
    例えば、毎月の給料から一定額を自動的に貯金口座に移す「先取り貯金」を取り入れるだけで、無理なく資金を作ることができます。
    貯蓄の習慣を身につけることで、後に投資を始めた際、焦ることなく長期的に資産を育てる準備が整います。`,
    
    "積立安定型": `あなたはS&P500や全世界株式などのインデックスファンドへの積立投資が合っている可能性が高いです。
    この方法は株式市場全体に分散して投資するため、個別企業の影響を受けにくく、長期的な資産形成に向いています。
    積立投資は「毎月一定額を購入し続ける」ことが基本で、相場が下がったときも安く買えるメリットがあります。
    初心者でも無理なく実行でき、投資を習慣化するには最適な方法です。
    積立安定型は、未来の安心を着実に手に入れるための賢い選択です。`,
    
    "積立応用型": `あなたは日本株の中で高配当株や大型株を中心に積立投資をするスタイルに適性があります。
    株式を選ぶ際は、安定的な業績や配当利回りを意識すると、長期保有のメリットが最大化します。
    毎月一定金額を積み立てる方法で、株価が下がったときにも安く購入できるため、投資効率を高めることが可能です。
    配当収入は再投資することで資産を加速させ、成長性と収益性を両立できます。
    中長期的な視点で、企業分析や市場動向を学びながら運用することが重要です。`,
    
    "ステーキング運用型": `あなたは仮想通貨のステーキングやレンディングを通じて、保有資産から利息のような収益を得るスタイルに適性があります。
    ステーキングは、特定の暗号資産をブロックチェーンネットワークに預けることで報酬を得る方法で、長期的に資産を増やせる特徴があります。
    レンディングも同様に、資産を貸し出すことで利息を受け取り、安定した収益の積み重ねが可能です。
    価格の変動に一喜一憂せず、じっくり運用することで雪だるま式に資産を増やすことができます。`,
    
    "株式アクティブ型": `あなたは個別株を中長期で保有して利益を狙うスタイルに適性があります。
    企業の成長や業績、事業モデルに注目し、自分で選んだ株を持つ楽しみを味わえる投資方法です。
    中長期保有によって、企業の成長に応じた株価上昇や配当収入を享受できるのが特徴です。
    株主優待を通じて投資の楽しさを実感できる点も魅力です。`,
    
    "アクティブチャレンジ型": `あなたはFXや個別株などを活用し、短期的な利益を狙うスタイルに適性があります。
    値動きの小さなチャンスを捉えて収益を上げるため、スピード感と判断力が求められます。
    リスクは大きめですが、相場観や戦略を身につけることで運用効率を高めることが可能です。
    挑戦することで得られる経験が、将来の投資判断に活かされます。`,
    
    "ハイリスクハイリターン型": `あなたは仮想通貨の売買などで、大きな利益を狙うスタイルに適性があります。
    市場の値動きが激しいためリスクは高いですが、成功したときのリターンも大きいのが特徴です。
    価格変動の激しさを楽しみながら、短期間で利益を積み上げる経験ができるのが魅力です。
    失敗も学びの一部となり、次の投資判断に活かせます。`,
    
    "テクノロジー志向型": `あなたはベンチャー企業や新興国への投資を通じて、未来の成長市場に参加するスタイルに適性があります。
    新しい技術や社会を変える可能性のある企業に投資することで、経済的なリターンと同時に、社会への影響を感じることができます。
    まだ注目されていない分野を支える先行者としての楽しみがあります。
    未来の変化を先取りし、社会の成長と共に自分の資産も育てられる特別なスタイルです。`
    };
    
  // 説明文を埋め込む関数
    function renderDescription(type, targetId) {
    const container = document.getElementById(targetId);
    if (!descriptions[type]) return;
    
    const fullText = descriptions[type];
    const lines = fullText.split("\n");
    const preview = lines.slice(0, 4).join("<br>");
    
    container.innerHTML = `
        <p>${preview}</p>
        <button class="show-more">すべて見る⇩</button>
        <div class="full-text hidden">${fullText.replace(/\n/g, "<br>")}</div>
    `;
    
    container.querySelector(".show-more").addEventListener("click", (e) => {
        const fullDiv = container.querySelector(".full-text");
        fullDiv.classList.toggle("hidden");
        e.target.textContent = fullDiv.classList.contains("hidden") ? "すべて見る⇩" : "閉じる⇧";
    });
    }
  